
#OpenSSL 

openssl genrsa -out dev-user.key 2048
openssl req -new -key dev-user.key -subj "/CN=dev-user" -out dev-user.csr
openssl genrsa -out prod-user.key 2048
openssl req -new -key prod-user.key -subj "/CN=prod-user" -out prod-user.csr
openssl genrsa -out test-user.key 2048
openssl req -new -key test-user.key -subj "/CN=test-user" -out test-user.csr
openssl x509 -req -in prod-user.csr -CA ca.crt -CAkey ca.key -CAcreateserial -out prod-user.crt -days 10000
openssl x509 -req -in test-user.csr -CA ca.crt -CAkey ca.key -CAcreateserial -out test-user.crt -days 10000
openssl x509 -req -in dev-user.csr -CA ca.crt -CAkey ca.key -CAcreateserial -out dev-user.crt -days 10000

#Creating context - user - cluster

kubectl config set-credentials dev-user --client-certificate=dev-user.crt --client-key=dev-user.key
kubectl config set-credentials test-user --client-certificate=test-user.crt --client-key=test-user.key
kubectl config set-credentials prod-user --client-certificate=prod-user.crt --client-key=prod-user.key
kubectl config set-context dev-context --cluster=kubernetes --namespace=dev --user=dev-user
kubectl config set-context test-context --cluster=kubernetes --namespace=test --user=test-user
kubectl config set-context prod-context --cluster=kubernetes --namespace=prod --user=prod-user

#Deleting
kubectl config use-context kubernetes
kubectl config delete-user prod-user
kubectl config delete-cluster prod-cluster 
kubectl config delete-context prod-context 
kubectl config delete-user test-user
kubectl config delete-cluster test-cluster
kubectl config delete-context test-context 
kubectl config delete-user dev-user
kubectl config delete-cluster dev-cluster
kubectl config delete-context dev-context 


kubectl config use-context kubernetes-admin@kubernetes
kubectl config get-clusters
kubectl config get-users
kubectl config get-contexts


vi dev_admin_ns_role.yaml

apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  namespace: dev
  name: dev-role-admin
rules:
- apiGroups: [""]
  resources: ["pods", "services", "configmaps", "secrets"]
  verbs: ["get", "list", "watch", "create", "update", "delete"]
- apiGroups: ["apps"]
  resources: ["deployments", "statefulsets", "daemonsets", "replicasets"]
  verbs: ["get", "list", "watch", "create", "update", "delete"]
- apiGroups: ["batch"]
  resources: ["jobs", "cronjobs"]
  verbs: ["get", "list", "watch", "create", "update", "delete"]
- apiGroups: ["rbac.authorization.k8s.io"]
  resources: ["roles", "rolebindings"]
  verbs: ["get", "list", "watch", "create", "update", "delete"]
:wq

vi dev_admin_ns_binding.yaml

apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  namespace: dev
  name: dev-binding-admin
subjects:
- kind: User
  name: dev-user
  apiGroup: rbac.authorization.k8s.io
roleRef:
  kind: Role
  name: dev-namespace-admin
  apiGroup: rbac.authorization.k8s.io

:wq


vi test_admin_ns_role.yaml

apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  namespace: test
  name: test-role-admin
rules:
- apiGroups: [""]
  resources: ["pods", "services", "configmaps", "secrets"]
  verbs: ["get", "list", "watch", "create", "update", "delete"]
- apiGroups: ["apps"]
  resources: ["deployments", "statefulsets", "daemonsets", "replicasets"]
  verbs: ["get", "list", "watch", "create", "update", "delete"]
- apiGroups: ["batch"]
  resources: ["jobs", "cronjobs"]
  verbs: ["get", "list", "watch", "create", "update", "delete"]
- apiGroups: ["rbac.authorization.k8s.io"]
  resources: ["roles", "rolebindings"]
  verbs: ["get", "list", "watch", "create", "update", "delete"]
:wq

vi test_admin_ns_binding.yaml

apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  namespace: test
  name: test-binding-admin
subjects:
- kind: User
  name: test-user
  apiGroup: rbac.authorization.k8s.io
roleRef:
  kind: Role
  name: test-namespace-admin
  apiGroup: rbac.authorization.k8s.io

:wq


vi prod_admin_ns_role.yaml

apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  namespace: prod
  name: prod-role-admin
rules:
- apiGroups: [""]
  resources: ["pods", "services", "configmaps", "secrets"]
  verbs: ["get", "list", "watch", "create", "update", "delete"]
- apiGroups: ["apps"]
  resources: ["deployments", "statefulsets", "daemonsets", "replicasets"]
  verbs: ["get", "list", "watch", "create", "update", "delete"]
- apiGroups: ["batch"]
  resources: ["jobs", "cronjobs"]
  verbs: ["get", "list", "watch", "create", "update", "delete"]
- apiGroups: ["rbac.authorization.k8s.io"]
  resources: ["roles", "rolebindings"]
  verbs: ["get", "list", "watch", "create", "update", "delete"]
:wq

vi prod_admin_ns_binding.yaml

apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  namespace: prod
  name: prod-binding-admin
subjects:
- kind: User
  name: prod-user
  apiGroup: rbac.authorization.k8s.io
roleRef:
  kind: Role
  name: prod-namespace-admin
  apiGroup: rbac.authorization.k8s.io

:wq

