=====================
# Part 1: Complicating Readiness Probes

vi sterling-prod-probe1.yaml

apiVersion: apps/v1
kind: Deployment
metadata:
  name: sterling-prod-probe1
spec:
  replicas: 3  # Specifies the desired number of replicas
  selector:
    matchLabels:
      app: sterling
      env: production
      server: web
    # Specifies how Pods should be selected for the Deployment based on labels
  strategy:
    type: Recreate  # Specifies the update strategy for the Deployment
  minReadySeconds: 5  # Specifies the minimum number of seconds for a Pod to be ready
  paused: false  # Specifies whether the Deployment is paused
  progressDeadlineSeconds: 600  # Specifies the maximum time for the Deployment to make progress before considered failed
  revisionHistoryLimit: 10  # Specifies the number of old ReplicaSets to retain for rollback
  template:
    metadata:
      labels:
        app: sterling
        env: production
        server: web
        version: v1
    # Specifies labels for Pods created by the Deployment
    spec:
      containers:
      - name: nginx
        image: beyondcloudai/nginx:v1
        ports:
        - containerPort: 80
        readinessProbe:
          httpGet:
            path: /
            port: 8080
          initialDelaySeconds: 10
          periodSeconds: 5
          failureThreshold: 3
:wq

#Deploy and test your pod by browing it locally using its IP.

vi sterling1-lb-prod-p1-svc.yaml

apiVersion: v1
kind: Service
metadata:
  name: sterling-lb-svc
spec:
  selector:
    app: sterling
    env: production
    server: web
  ports:
  - protocol: TCP
    port: 80
    targetPort: 80
  type: LoadBalancer
:wq

#Deploy the service and test your pod by browing its cluster IP.

=====================
# Part 2: Complicating Liveness Probe

vi sterling-prod-probe2.yaml

apiVersion: apps/v1
kind: Deployment
metadata:
  name: sterling-prod-probe2
spec:
  replicas: 3 
  selector:
    matchLabels:
      app: sterling
      env: production
      server: web
  strategy:
    type: Recreate 
  minReadySeconds: 5  
  paused: false  
  progressDeadlineSeconds: 600 
  revisionHistoryLimit: 10 
  template:
    metadata:
      labels:
        app: sterling
        env: production
        server: web
        version: v1
    spec:
      containers:
      - name: nginx
        image: beyondcloudai/nginx:v1
        ports:
        - containerPort: 80
        livenessProbe:
          httpGet:
            path: /
            port: 8080
          initialDelaySeconds: 10
          periodSeconds: 5
          failureThreshold: 3
:wq

=====================
# Part 3: Readiness probe and liveness probe using TCP.

vi sterling-prod-probe3.yaml

apiVersion: v1
kind: Pod
metadata:
  name: sterling-prod-probe3
spec:
  containers:
  - name: nginx
    image: nginx:latest
    readinessProbe:
      tcpSocket:
        port: 80
      initialDelaySeconds: 5
      timeoutSeconds: 10
      periodSeconds: 5
      successThreshold: 1
      failureThreshold: 3
    livenessProbe:
      tcpSocket:
        port: 80
      initialDelaySeconds: 10
      timeoutSeconds: 5
      periodSeconds: 15
      successThreshold: 1
      failureThreshold: 3

=====================
# Part 4: Readiness probe and liveness probe using exec.

vi sterling-prod-probe4.yaml

apiVersion: v1
kind: Pod
metadata:
  name: sterling-prod-probe4
spec:
  containers:
  - name: nginx
    image: nginx:latest
    readinessProbe:
      exec:
        command:
        - /bin/sh
        - -c
        - /usr/bin/pgrep nginx
      initialDelaySeconds: 5
      timeoutSeconds: 10
      periodSeconds: 5
      successThreshold: 1
      failureThreshold: 3
    livenessProbe:
      exec:
        command:
        - /bin/sh
        - -c
        - /usr/bin/pgrep nginx
      initialDelaySeconds: 10
      timeoutSeconds: 5
      periodSeconds: 15
      successThreshold: 1
      failureThreshold: 3

Soulution:

Update image to nginx:alpine
Or
Update your probes to check for the command exec output: nginx -t (remember this requires recreation of pod)

=====================
# Part 5: Advanced Readiness probe with condition

vi sterling-prod-probe5.yaml

apiVersion: v1
kind: Pod
metadata:
  name: sterling-prod-probe5
spec:
  containers:
  - name: app-nginx
    image: nginx:alpine
    ports:
    - containerPort: 80
    readinessProbe:
      exec:
        command:
        - /bin/sh
        - -c
        - |
          nc -z localhost 8090
    # The readiness probe for the nginx container waits until the db container's port 5432 is reachable.

  - name: app-tomcat
    image: tomcat:latest
    ports:
    - containerPort: 8080
:wq



=====================
# Part 6: Advnced probes configuration - Enterint different states

vi sterling-prod-probe6.yaml

apiVersion: v1
kind: Pod
metadata:
  name: sterling-prod-probe6
spec:
  containers:
  - name: app-test 
    image: busybox:latest
    args:
    - /bin/sh
    - -c
    - touch /tmp/test; sleep 45; rm -rf /tmp/test; sleep 900
    readinessProbe: 
      exec:
        command: ["test","-e","/tmp/test"]
      initialDelaySeconds: 15
      periodSeconds: 6
      timeoutSeconds: 1
      successThreshold: 1
      failureThreshold: 3
  restartPolicy: OnFailure

======================
# Part 7: Advanced liveness probe for hung thread deduction

vi sterling-prod-probe7.yaml

apiVersion: apps/v1
kind: Deployment
metadata:
  name: sterling-prod-probe7
spec:
  replicas: 1
  selector:
    matchLabels:
      app: tomcat
  template:
    metadata:
      labels:
        app: tomcat
    spec:
      containers:
      - name: tomcat-container
        image: tomcat:latest
        ports:
        - containerPort: 8080
        livenessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - curl -f http://localhost:8080/manager/jmxproxy/?get=Catalina:type=ThreadPool,name=\"http-nio-8080\" | grep maxThreads | grep -v maxThreads=200
          initialDelaySeconds: 30
          periodSeconds: 60
:wq

======================
# Part 8: Advanced Liveness probe for heap size check

vi sterling-prod-probe8.yaml

apiVersion: apps/v1
kind: Deployment
metadata:
  name: sterling-prod-probe8
spec:
  replicas: 1
  selector:
    matchLabels:
      app: tomcat
  template:
    metadata:
      labels:
        app: tomcat
    spec:
      containers:
      - name: tomcat-container
        image: tomcat:latest
        ports:
        - containerPort: 8080
        livenessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - java_pid=$(pgrep -f '.*java.*-Dcatalina.base=/usr/local/tomcat'); [ $(cat /proc/$java_pid/status | grep VmRSS | awk '{print $2}') -lt 20000000 ]
          initialDelaySeconds: 30
          periodSeconds: 60
:wq

======================
# Part 9: Advanced Liveness probe for database health (pending)

vi 
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mysql
  template:
    metadata:
      labels:
        app: mysql
    spec:
      containers:
      - name: mysql-container
        image: mysql:latest
        ports:
        - containerPort: 3306
        livenessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - mysql -h localhost -u root -p${MYSQL_ROOT_PASSWORD} -e "SELECT 1;"
          initialDelaySeconds: 30
          periodSeconds: 60

