# Workload Management - Resource Allocation

#First Example
  
vi ww1.yaml

apiVersion: v1
kind: Pod
metadata:
  name: pod-with-nodename
spec:
  containers:
  - name: nginx
    image: nginx
  nodeName: worker1

:wq

#Second example
  
vi wm2.yaml

apiVersion: v1
kind: Pod
metadata:
  name: pod-with-nodeselector
spec:
  containers:
  - name: nginx
    image: nginx
  nodeSelector:
    gpu: "true"

:wq

  
==============

Workload Management - Resource Request & Limit

vi wm3.yaml

apiVersion: apps/v1
kind: ReplicaSet
metadata:
  name: my-replicaset
spec:
  replicas: 3
  selector:
    matchLabels:
      app: my-app
  template:
    metadata:
      labels:
        app: my-app
    spec:
      containers:
      - name: my-container
        image: nginx:latest
        resources:
          limits:
            cpu: "1"
            memory: "512Mi"
          requests:
            cpu: "0.5"
            memory: "256Mi"
:wq


vi wm4.yaml

apiVersion: apps/v1
kind: ReplicaSet
metadata:
  name: my-replicaset
spec:
  replicas: 3
  selector:
    matchLabels:
      app: my-app
  template:
    metadata:
      labels:
        app: my-app
    spec:
      containers:
      - name: my-container
        image: nginx:latest
        resources:
          limits:
            cpu: "5"
            memory: "8Gi"  
          requests:
            cpu: "5"
            memory: "8Gi"  
:wq

  
===================

Workload Management - Horizontal Pod Autoscaler (HPA).

#Command Based HPA

vi wm5.yaml

apiVersion: apps/v1
kind: Deployment
metadata:
  name: php-apache
spec:
  selector:
    matchLabels:
      run: php-apache
  template:
    metadata:
      labels:
        run: php-apache
    spec:
      containers:
      - name: php-apache
        image: registry.k8s.io/hpa-example
        ports:
        - containerPort: 80
        resources:
          limits:
            cpu: 500m
          requests:
            cpu: 200m
---
apiVersion: v1
kind: Service
metadata:
  name: php-apache
  labels:
    run: php-apache
spec:
  ports:
  - port: 80
  selector:
    run: php-apache
:wq

kubectl autoscale deployment php-apache --cpu-percent=50 --min=1 --max=10

kubectl apply -f https://github.com/kubernetes-sigs/metrics-server/releases/latest/download/components.yaml

kubectl describe deployment/metrics-server -n kube-system
kubectl describe pods/metrics-server-6d94bc8694-jp7lx -n kube-system
kubectl logs pods/metrics-server-6d94bc8694-jp7lx -n kube-system

kubectl delete -f https://github.com/kubernetes-sigs/metrics-server/releases/latest/download/components.yaml


wget https://github.com/kubernetes-sigs/metrics-server/releases/latest/download/components.yaml

add the follwoing line to components.yaml

  - --kubelet-insecure-tls

kubectl apply -f components.yaml
kubectl describe deployment/metrics-server -n kube-system
kubectl get pods -n kube-system

kubectl run -i --tty load-generator --rm --image=busybox:1.28 --restart=Never -- /bin/sh -c "while sleep 0.01; do wget -q -O- http://php-apache; done"


#YAML Based HPA For Memory:

vi wm6.yaml

apiVersion: apps/v1
kind: Deployment
metadata:
  name: php-apache
spec:
  selector:
    matchLabels:
      run: php-apache
  template:
    metadata:
      labels:
        run: php-apache
    spec:
      containers:
      - name: php-apache
        image: registry.k8s.io/hpa-example
        ports:
        - containerPort: 80
        resources:
          limits:
            memory: "512Mi"
          requests:
            memory: "512Mi"
---
apiVersion: v1
kind: Service
metadata:
  name: php-apache
  labels:
    run: php-apache
spec:
  ports:
  - port: 80
  selector:
    run: php-apache
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: php-apache
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: php-apache
  minReplicas: 1
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 60
:wq
====================================

# Workload Management - Node & Pod Affinity.

vi wm7.yaml

apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-app
spec:
  replicas: 3
  selector:
    matchLabels:
      app: my-app
  template:
    metadata:
      labels:
        app: my-app
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: gpu
                operator: In
                values:
                - "true"
      containers:
      - name: my-container
        image: nginx:latest
:wq


vi wm8.yaml

apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-app1
spec:
  replicas: 3
  selector:
    matchLabels:
      app: my-app
  template:
    metadata:
      labels:
        app: my-app
    spec:
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - my-app
            topologyKey: kubernetes.io/hostname
      containers:
      - name: my-container
        image: nginx:latest
:wq

==================================

Workload Management - Anti Affinity

vi wm9.yaml

